//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ICSharpCode.ILSpy.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ICSharpCode.ILSpy.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _About ähnelt.
        /// </summary>
        public static string _About {
            get {
                return ResourceManager.GetString("_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Add To Main List ähnelt.
        /// </summary>
        public static string _AddMainList {
            get {
                return ResourceManager.GetString("_AddMainList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Check for Updates ähnelt.
        /// </summary>
        public static string _CheckUpdates {
            get {
                return ResourceManager.GetString("_CheckUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Collapse all tree nodes ähnelt.
        /// </summary>
        public static string _CollapseTreeNodes {
            get {
                return ResourceManager.GetString("_CollapseTreeNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Create ähnelt.
        /// </summary>
        public static string _Create {
            get {
                return ResourceManager.GetString("_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _File ähnelt.
        /// </summary>
        public static string _File {
            get {
                return ResourceManager.GetString("_File", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Help ähnelt.
        /// </summary>
        public static string _Help {
            get {
                return ResourceManager.GetString("_Help", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Load Dependencies ähnelt.
        /// </summary>
        public static string _LoadDependencies {
            get {
                return ResourceManager.GetString("_LoadDependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Open... ähnelt.
        /// </summary>
        public static string _Open {
            get {
                return ResourceManager.GetString("_Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Open Command Line Here ähnelt.
        /// </summary>
        public static string _OpenCommandLineHere {
            get {
                return ResourceManager.GetString("_OpenCommandLineHere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Open Containing Folder ähnelt.
        /// </summary>
        public static string _OpenContainingFolder {
            get {
                return ResourceManager.GetString("_OpenContainingFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Options... ähnelt.
        /// </summary>
        public static string _Options {
            get {
                return ResourceManager.GetString("_Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Reload ähnelt.
        /// </summary>
        public static string _Reload {
            get {
                return ResourceManager.GetString("_Reload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Remove ähnelt.
        /// </summary>
        public static string _Remove {
            get {
                return ResourceManager.GetString("_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Remove Assemblies with load errors ähnelt.
        /// </summary>
        public static string _RemoveAssembliesWithLoadErrors {
            get {
                return ResourceManager.GetString("_RemoveAssembliesWithLoadErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Reset ähnelt.
        /// </summary>
        public static string _Reset {
            get {
                return ResourceManager.GetString("_Reset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resources ähnelt.
        /// </summary>
        public static string _Resources {
            get {
                return ResourceManager.GetString("_Resources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Save Code... ähnelt.
        /// </summary>
        public static string _SaveCode {
            get {
                return ResourceManager.GetString("_SaveCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Search: ähnelt.
        /// </summary>
        public static string _Search {
            get {
                return ResourceManager.GetString("_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Search for: ähnelt.
        /// </summary>
        public static string _SearchFor {
            get {
                return ResourceManager.GetString("_SearchFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Show debug steps ähnelt.
        /// </summary>
        public static string _ShowDebugSteps {
            get {
                return ResourceManager.GetString("_ShowDebugSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toggle Folding ähnelt.
        /// </summary>
        public static string _ToggleFolding {
            get {
                return ResourceManager.GetString("_ToggleFolding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _View ähnelt.
        /// </summary>
        public static string _View {
            get {
                return ResourceManager.GetString("_View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die |All Files|*.* ähnelt.
        /// </summary>
        public static string AllFiles {
            get {
                return ResourceManager.GetString("AllFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allow multiple instances ähnelt.
        /// </summary>
        public static string AllowMultipleInstances {
            get {
                return ResourceManager.GetString("AllowMultipleInstances", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always use braces ähnelt.
        /// </summary>
        public static string AlwaysBraces {
            get {
                return ResourceManager.GetString("AlwaysBraces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Analyze ähnelt.
        /// </summary>
        public static string Analyze {
            get {
                return ResourceManager.GetString("Analyze", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The directory is not empty. File will be overwritten.
        ///Are you sure you want to continue? ähnelt.
        /// </summary>
        public static string AssemblySaveCodeDirectoryNotEmpty {
            get {
                return ResourceManager.GetString("AssemblySaveCodeDirectoryNotEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project Directory not empty ähnelt.
        /// </summary>
        public static string AssemblySaveCodeDirectoryNotEmptyTitle {
            get {
                return ResourceManager.GetString("AssemblySaveCodeDirectoryNotEmptyTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Automatically check for updates every week ähnelt.
        /// </summary>
        public static string AutomaticallyCheckUpdatesEveryWeek {
            get {
                return ResourceManager.GetString("AutomaticallyCheckUpdatesEveryWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Back ähnelt.
        /// </summary>
        public static string Back {
            get {
                return ResourceManager.GetString("Back", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string Cancel {
            get {
                return ResourceManager.GetString("Cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Entity could not be resolved. Cannot analyze entities from missing assembly references. Add the missing reference and try again. ähnelt.
        /// </summary>
        public static string CannotAnalyzeMissingRef {
            get {
                return ResourceManager.GetString("CannotAnalyzeMissingRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check again ähnelt.
        /// </summary>
        public static string CheckAgain {
            get {
                return ResourceManager.GetString("CheckAgain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Checking... ähnelt.
        /// </summary>
        public static string Checking {
            get {
                return ResourceManager.GetString("Checking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check for updates ähnelt.
        /// </summary>
        public static string CheckUpdates {
            get {
                return ResourceManager.GetString("CheckUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Collapse all tree nodes ähnelt.
        /// </summary>
        public static string CollapseTreeNodes {
            get {
                return ResourceManager.GetString("CollapseTreeNodes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy ähnelt.
        /// </summary>
        public static string Copy {
            get {
                return ResourceManager.GetString("Copy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy error message ähnelt.
        /// </summary>
        public static string CopyErrorMessage {
            get {
                return ResourceManager.GetString("CopyErrorMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy FQ Name ähnelt.
        /// </summary>
        public static string CopyName {
            get {
                return ResourceManager.GetString("CopyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create ähnelt.
        /// </summary>
        public static string Create {
            get {
                return ResourceManager.GetString("Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DEBUG -- Decompile All ähnelt.
        /// </summary>
        public static string DEBUGDecompile {
            get {
                return ResourceManager.GetString("DEBUGDecompile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DEBUG -- Decompile 100x ähnelt.
        /// </summary>
        public static string DEBUGDecompile100x {
            get {
                return ResourceManager.GetString("DEBUGDecompile100x", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DEBUG -- Disassemble All ähnelt.
        /// </summary>
        public static string DEBUGDisassemble {
            get {
                return ResourceManager.GetString("DEBUGDisassemble", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug Steps ähnelt.
        /// </summary>
        public static string DebugSteps {
            get {
                return ResourceManager.GetString("DebugSteps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Debug this step ähnelt.
        /// </summary>
        public static string DebugThisStep {
            get {
                return ResourceManager.GetString("DebugThisStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompiler ähnelt.
        /// </summary>
        public static string Decompiler {
            get {
                return ResourceManager.GetString("Decompiler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Allow extension &apos;Add&apos; methods in collection initializer expressions ähnelt.
        /// </summary>
        public static string DecompilerSettings_AllowExtensionAddMethodsInCollectionInitializerExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings.AllowExtensionAddMethodsInCollectionInitializerExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use &apos;ref&apos; extension methods ähnelt.
        /// </summary>
        public static string DecompilerSettings_AllowExtensionMethodSyntaxOnRef {
            get {
                return ResourceManager.GetString("DecompilerSettings.AllowExtensionMethodSyntaxOnRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always cast targets of explicit interface implementation calls ähnelt.
        /// </summary>
        public static string DecompilerSettings_AlwaysCastTargetsOfExplicitInterfaceImplementationCalls {
            get {
                return ResourceManager.GetString("DecompilerSettings.AlwaysCastTargetsOfExplicitInterfaceImplementationCalls", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Always use braces ähnelt.
        /// </summary>
        public static string DecompilerSettings_AlwaysUseBraces {
            get {
                return ResourceManager.GetString("DecompilerSettings.AlwaysUseBraces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Apply Windows Runtime projections on loaded assemblies ähnelt.
        /// </summary>
        public static string DecompilerSettings_ApplyWindowsRuntimeProjectionsOnLoadedAssemblies {
            get {
                return ResourceManager.GetString("DecompilerSettings.ApplyWindowsRuntimeProjectionsOnLoadedAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Array initializer expressions ähnelt.
        /// </summary>
        public static string DecompilerSettings_ArrayInitializerExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings.ArrayInitializerExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile ?. and ?[] operators ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileAndOperators {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileAndOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile anonymous methods/lambdas ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileAnonymousMethodsLambdas {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileAnonymousMethodsLambdas", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile anonymous types ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileAnonymousTypes {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileAnonymousTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile async methods ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileAsyncMethods {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileAsyncMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile automatic events ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileAutomaticEvents {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileAutomaticEvents", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile automatic properties ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileAutomaticProperties {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileAutomaticProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile await in catch/finally blocks ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileAwaitInCatchFinallyBlocks {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileAwaitInCatchFinallyBlocks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile C# 1.0 &apos;public unsafe fixed int arr[10];&apos; members ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileC10PublicUnsafeFixedIntArr10Members {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileC10PublicUnsafeFixedIntArr10Members", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile [DecimalConstant(...)] as simple literal values ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileDecimalConstantAsSimpleLiteralValues {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileDecimalConstantAsSimpleLiteralValues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile enumerators (yield return) ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileEnumeratorsYieldReturn {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileEnumeratorsYieldReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile expression trees ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileExpressionTrees {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileExpressionTrees", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompile use of the &apos;dynamic&apos; type ähnelt.
        /// </summary>
        public static string DecompilerSettings_DecompileUseOfTheDynamicType {
            get {
                return ResourceManager.GetString("DecompilerSettings.DecompileUseOfTheDynamicType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detect foreach statements ähnelt.
        /// </summary>
        public static string DecompilerSettings_DetectForeachStatements {
            get {
                return ResourceManager.GetString("DecompilerSettings.DetectForeachStatements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detect lock statements ähnelt.
        /// </summary>
        public static string DecompilerSettings_DetectLockStatements {
            get {
                return ResourceManager.GetString("DecompilerSettings.DetectLockStatements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detect switch on string ähnelt.
        /// </summary>
        public static string DecompilerSettings_DetectSwitchOnString {
            get {
                return ResourceManager.GetString("DecompilerSettings.DetectSwitchOnString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detect tuple comparisons ähnelt.
        /// </summary>
        public static string DecompilerSettings_DetectTupleComparisons {
            get {
                return ResourceManager.GetString("DecompilerSettings.DetectTupleComparisons", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detect using statements ähnelt.
        /// </summary>
        public static string DecompilerSettings_DetectUsingStatements {
            get {
                return ResourceManager.GetString("DecompilerSettings.DetectUsingStatements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dictionary initializer expressions ähnelt.
        /// </summary>
        public static string DecompilerSettings_DictionaryInitializerExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings.DictionaryInitializerExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die F#-specific options ähnelt.
        /// </summary>
        public static string DecompilerSettings_FSpecificOptions {
            get {
                return ResourceManager.GetString("DecompilerSettings.FSpecificOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Include XML documentation comments in the decompiled code ähnelt.
        /// </summary>
        public static string DecompilerSettings_IncludeXMLDocumentationCommentsInTheDecompiledCode {
            get {
                return ResourceManager.GetString("DecompilerSettings.IncludeXMLDocumentationCommentsInTheDecompiledCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert using declarations ähnelt.
        /// </summary>
        public static string DecompilerSettings_InsertUsingDeclarations {
            get {
                return ResourceManager.GetString("DecompilerSettings.InsertUsingDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Introduce local functions ähnelt.
        /// </summary>
        public static string DecompilerSettings_IntroduceLocalFunctions {
            get {
                return ResourceManager.GetString("DecompilerSettings.IntroduceLocalFunctions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IsByRefLikeAttribute should be replaced with &apos;ref&apos; modifiers on structs ähnelt.
        /// </summary>
        public static string DecompilerSettings_IsByRefLikeAttributeShouldBeReplacedWithRefModifiersOnStructs {
            get {
                return ResourceManager.GetString("DecompilerSettings.IsByRefLikeAttributeShouldBeReplacedWithRefModifiersOnStructs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IsReadOnlyAttribute should be replaced with &apos;readonly&apos;/&apos;in&apos; modifiers on structs/parameters ähnelt.
        /// </summary>
        public static string DecompilerSettings_IsReadOnlyAttributeShouldBeReplacedWithReadonlyInModifiersOnStructsParameters {
            get {
                return ResourceManager.GetString("DecompilerSettings.IsReadOnlyAttributeShouldBeReplacedWithReadonlyInModifiersOnSt" +
                        "ructsParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die IsUnmanagedAttribute on type parameters should be replaced with &apos;unmanaged&apos; constraints ähnelt.
        /// </summary>
        public static string DecompilerSettings_IsUnmanagedAttributeOnTypeParametersShouldBeReplacedWithUnmanagedConstraints {
            get {
                return ResourceManager.GetString("DecompilerSettings.IsUnmanagedAttributeOnTypeParametersShouldBeReplacedWithUnmana" +
                        "gedConstraints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nullable reference types ähnelt.
        /// </summary>
        public static string DecompilerSettings_NullableReferenceTypes {
            get {
                return ResourceManager.GetString("DecompilerSettings.NullableReferenceTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Object/collection initializer expressions ähnelt.
        /// </summary>
        public static string DecompilerSettings_ObjectCollectionInitializerExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings.ObjectCollectionInitializerExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other ähnelt.
        /// </summary>
        public static string DecompilerSettings_Other {
            get {
                return ResourceManager.GetString("DecompilerSettings.Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove dead and side effect free code (use with caution!) ähnelt.
        /// </summary>
        public static string DecompilerSettings_RemoveDeadAndSideEffectFreeCodeUseWithCaution {
            get {
                return ResourceManager.GetString("DecompilerSettings.RemoveDeadAndSideEffectFreeCodeUseWithCaution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove dead stores (use with caution!) ähnelt.
        /// </summary>
        public static string DecompilerSettings_RemoveDeadStores {
            get {
                return ResourceManager.GetString("DecompilerSettings.RemoveDeadStores", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove optional arguments, if possible ähnelt.
        /// </summary>
        public static string DecompilerSettings_RemoveOptionalArgumentsIfPossible {
            get {
                return ResourceManager.GetString("DecompilerSettings.RemoveOptionalArgumentsIfPossible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show info from debug symbols, if available ähnelt.
        /// </summary>
        public static string DecompilerSettings_ShowInfoFromDebugSymbolsIfAvailable {
            get {
                return ResourceManager.GetString("DecompilerSettings.ShowInfoFromDebugSymbolsIfAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use discards ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseDiscards {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseDiscards", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use expression-bodied member syntax for get-only properties ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseExpressionBodiedMemberSyntaxForGetOnlyProperties {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseExpressionBodiedMemberSyntaxForGetOnlyProperties", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use extension method syntax ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseExtensionMethodSyntax {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseExtensionMethodSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use implicit conversions between tuple types ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseImplicitConversionsBetweenTupleTypes {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseImplicitConversionsBetweenTupleTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use implicit method group conversions ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseImplicitMethodGroupConversions {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseImplicitMethodGroupConversions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use lambda syntax, if possible ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseLambdaSyntaxIfPossible {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseLambdaSyntaxIfPossible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use lifted operators for nullables ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseLiftedOperatorsForNullables {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseLiftedOperatorsForNullables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use LINQ expression syntax ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseLINQExpressionSyntax {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseLINQExpressionSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use named arguments ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseNamedArguments {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseNamedArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use non-trailing named arguments ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseNonTrailingNamedArguments {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseNonTrailingNamedArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use out variable declarations ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseOutVariableDeclarations {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseOutVariableDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use stackalloc initializer syntax ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseStackallocInitializerSyntax {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseStackallocInitializerSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use string interpolation ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseStringInterpolation {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseStringInterpolation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use throw expressions ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseThrowExpressions {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseThrowExpressions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use tuple type syntax ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseTupleTypeSyntax {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseTupleTypeSyntax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use variable names from debug symbols, if available ähnelt.
        /// </summary>
        public static string DecompilerSettings_UseVariableNamesFromDebugSymbolsIfAvailable {
            get {
                return ResourceManager.GetString("DecompilerSettings.UseVariableNamesFromDebugSymbolsIfAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die VB-specific options ähnelt.
        /// </summary>
        public static string DecompilerSettings_VBSpecificOptions {
            get {
                return ResourceManager.GetString("DecompilerSettings.VBSpecificOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The settings selected below are applied to the decompiler output in combination with the selection in the language drop-down. Selecting a lower language version in the drop-down will deactivate all selected options of the higher versions. Note that some settings implicitly depend on each other, e.g.: LINQ expressions cannot be introduced without first transforming static calls to extension method calls. ähnelt.
        /// </summary>
        public static string DecompilerSettingsPanelLongText {
            get {
                return ResourceManager.GetString("DecompilerSettingsPanelLongText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die In neue Ansicht Dekompilieren ähnelt.
        /// </summary>
        public static string DecompileToNewPanel {
            get {
                return ResourceManager.GetString("DecompileToNewPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Decompiling... ähnelt.
        /// </summary>
        public static string Decompiling {
            get {
                return ResourceManager.GetString("Decompiling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dependencies ähnelt.
        /// </summary>
        public static string Dependencies {
            get {
                return ResourceManager.GetString("Dependencies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Derived Types ähnelt.
        /// </summary>
        public static string DerivedTypes {
            get {
                return ResourceManager.GetString("DerivedTypes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display ähnelt.
        /// </summary>
        public static string Display {
            get {
                return ResourceManager.GetString("Display", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display Code ähnelt.
        /// </summary>
        public static string DisplayCode {
            get {
                return ResourceManager.GetString("DisplayCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font: ähnelt.
        /// </summary>
        public static string DisplaySettingsPanel_Font {
            get {
                return ResourceManager.GetString("DisplaySettingsPanel_Font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Download ähnelt.
        /// </summary>
        public static string Download {
            get {
                return ResourceManager.GetString("Download", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die E_xit ähnelt.
        /// </summary>
        public static string E_xit {
            get {
                return ResourceManager.GetString("E_xit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Editor ähnelt.
        /// </summary>
        public static string Editor {
            get {
                return ResourceManager.GetString("Editor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable folding on all blocks in braces ähnelt.
        /// </summary>
        public static string EnableFoldingBlocksBraces {
            get {
                return ResourceManager.GetString("EnableFoldingBlocksBraces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable word wrap ähnelt.
        /// </summary>
        public static string EnableWordWrap {
            get {
                return ResourceManager.GetString("EnableWordWrap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enter a list name: ähnelt.
        /// </summary>
        public static string EnterListName {
            get {
                return ResourceManager.GetString("EnterListName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exit ähnelt.
        /// </summary>
        public static string Exit {
            get {
                return ResourceManager.GetString("Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expand member definitions after decompilation ähnelt.
        /// </summary>
        public static string ExpandMemberDefinitionsAfterDecompilation {
            get {
                return ResourceManager.GetString("ExpandMemberDefinitionsAfterDecompilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expand using declarations after decompilation ähnelt.
        /// </summary>
        public static string ExpandUsingDeclarationsAfterDecompilation {
            get {
                return ResourceManager.GetString("ExpandUsingDeclarationsAfterDecompilation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folding ähnelt.
        /// </summary>
        public static string Folding {
            get {
                return ResourceManager.GetString("Folding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Font ähnelt.
        /// </summary>
        public static string Font {
            get {
                return ResourceManager.GetString("Font", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Forward ähnelt.
        /// </summary>
        public static string Forward {
            get {
                return ResourceManager.GetString("Forward", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Generate portable PDB ähnelt.
        /// </summary>
        public static string GeneratePortable {
            get {
                return ResourceManager.GetString("GeneratePortable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Highlight matching braces ähnelt.
        /// </summary>
        public static string HighlightMatchingBraces {
            get {
                return ResourceManager.GetString("HighlightMatchingBraces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ILSpy version  ähnelt.
        /// </summary>
        public static string ILSpyVersion {
            get {
                return ResourceManager.GetString("ILSpyVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A new ILSpy version is available. ähnelt.
        /// </summary>
        public static string ILSpyVersionAvailable {
            get {
                return ResourceManager.GetString("ILSpyVersionAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indentation ähnelt.
        /// </summary>
        public static string Indentation {
            get {
                return ResourceManager.GetString("Indentation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent size: ähnelt.
        /// </summary>
        public static string IndentSize {
            get {
                return ResourceManager.GetString("IndentSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert using declarations ähnelt.
        /// </summary>
        public static string InsertUsingDeclarations {
            get {
                return ResourceManager.GetString("InsertUsingDeclarations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New list ähnelt.
        /// </summary>
        public static string List {
            get {
                return ResourceManager.GetString("List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load assemblies that were loaded in the last instance. ähnelt.
        /// </summary>
        public static string LoadAssembliesThatWereLoadedInTheLastInstance {
            get {
                return ResourceManager.GetString("LoadAssembliesThatWereLoadedInTheLastInstance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading... ähnelt.
        /// </summary>
        public static string Loading {
            get {
                return ResourceManager.GetString("Loading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location ähnelt.
        /// </summary>
        public static string Location {
            get {
                return ResourceManager.GetString("Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Misc ähnelt.
        /// </summary>
        public static string Misc {
            get {
                return ResourceManager.GetString("Misc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigation ähnelt.
        /// </summary>
        public static string Navigation {
            get {
                return ResourceManager.GetString("Navigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Nuget Package Browser ähnelt.
        /// </summary>
        public static string NugetPackageBrowser {
            get {
                return ResourceManager.GetString("NugetPackageBrowser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open ähnelt.
        /// </summary>
        public static string Open {
            get {
                return ResourceManager.GetString("Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open _List... ähnelt.
        /// </summary>
        public static string Open_List {
            get {
                return ResourceManager.GetString("Open_List", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Explorer ähnelt.
        /// </summary>
        public static string OpenExplorer {
            get {
                return ResourceManager.GetString("OpenExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open From GAC ähnelt.
        /// </summary>
        public static string OpenFrom {
            get {
                return ResourceManager.GetString("OpenFrom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open from _GAC... ähnelt.
        /// </summary>
        public static string OpenFrom_GAC {
            get {
                return ResourceManager.GetString("OpenFrom_GAC", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open List ähnelt.
        /// </summary>
        public static string OpenList {
            get {
                return ResourceManager.GetString("OpenList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Delete ähnelt.
        /// </summary>
        public static string OpenListDialog__Delete {
            get {
                return ResourceManager.GetString("OpenListDialog__Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die _Open ähnelt.
        /// </summary>
        public static string OpenListDialog__Open {
            get {
                return ResourceManager.GetString("OpenListDialog__Open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Options ähnelt.
        /// </summary>
        public static string Options {
            get {
                return ResourceManager.GetString("Options", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other ähnelt.
        /// </summary>
        public static string Other {
            get {
                return ResourceManager.GetString("Other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other options ähnelt.
        /// </summary>
        public static string OtherOptions {
            get {
                return ResourceManager.GetString("OtherOptions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Other Resources ähnelt.
        /// </summary>
        public static string OtherResources {
            get {
                return ResourceManager.GetString("OtherResources", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die for ex. property getter/setter access. To get optimal decompilation results, please manually add the missing references to the list of loaded assemblies. ähnelt.
        /// </summary>
        public static string PropertyManuallyMissingReferencesListLoadedAssemblies {
            get {
                return ResourceManager.GetString("PropertyManuallyMissingReferencesListLoadedAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Public Key Token ähnelt.
        /// </summary>
        public static string PublicToken {
            get {
                return ResourceManager.GetString("PublicToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reference Name ähnelt.
        /// </summary>
        public static string ReferenceName {
            get {
                return ResourceManager.GetString("ReferenceName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die References ähnelt.
        /// </summary>
        public static string References {
            get {
                return ResourceManager.GetString("References", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reload all assemblies ähnelt.
        /// </summary>
        public static string RefreshCommand_ReloadAssemblies {
            get {
                return ResourceManager.GetString("RefreshCommand_ReloadAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reload all assemblies ähnelt.
        /// </summary>
        public static string ReloadAssemblies {
            get {
                return ResourceManager.GetString("ReloadAssemblies", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove dead and side effect free code ähnelt.
        /// </summary>
        public static string RemoveDeadSideEffectFreeCode {
            get {
                return ResourceManager.GetString("RemoveDeadSideEffectFreeCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resources file (*.resources)|*.resources|Resource XML file|*.resx ähnelt.
        /// </summary>
        public static string ResourcesFileFilter {
            get {
                return ResourceManager.GetString("ResourcesFileFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        public static string Save {
            get {
                return ResourceManager.GetString("Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Code ähnelt.
        /// </summary>
        public static string SaveCode {
            get {
                return ResourceManager.GetString("SaveCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search... ähnelt.
        /// </summary>
        public static string Search {
            get {
                return ResourceManager.GetString("Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search aborted, more than 1000 results found. ähnelt.
        /// </summary>
        public static string SearchAbortedMoreThan1000ResultsFound {
            get {
                return ResourceManager.GetString("SearchAbortedMoreThan1000ResultsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search (Ctrl+Shift+F or Ctrl+E) ähnelt.
        /// </summary>
        public static string SearchCtrlShiftFOrCtrlE {
            get {
                return ResourceManager.GetString("SearchCtrlShiftFOrCtrlE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searching... ähnelt.
        /// </summary>
        public static string Searching {
            get {
                return ResourceManager.GetString("Searching", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search MSDN... ähnelt.
        /// </summary>
        public static string SearchMSDN {
            get {
                return ResourceManager.GetString("SearchMSDN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search ähnelt.
        /// </summary>
        public static string SearchPane_Search {
            get {
                return ResourceManager.GetString("SearchPane_Search", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select All ähnelt.
        /// </summary>
        public static string Select {
            get {
                return ResourceManager.GetString("Select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select assemblies to open: ähnelt.
        /// </summary>
        public static string SelectAssembliesOpen {
            get {
                return ResourceManager.GetString("SelectAssembliesOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select language to decompile to ähnelt.
        /// </summary>
        public static string SelectLanguageDropdownTooltip {
            get {
                return ResourceManager.GetString("SelectLanguageDropdownTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a list: ähnelt.
        /// </summary>
        public static string SelectList {
            get {
                return ResourceManager.GetString("SelectList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select version of language to output ähnelt.
        /// </summary>
        public static string SelectVersionDropdownTooltip {
            get {
                return ResourceManager.GetString("SelectVersionDropdownTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shell ähnelt.
        /// </summary>
        public static string Shell {
            get {
                return ResourceManager.GetString("Shell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show _all types and members ähnelt.
        /// </summary>
        public static string Show_allTypesAndMembers {
            get {
                return ResourceManager.GetString("Show_allTypesAndMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show _internal types and members ähnelt.
        /// </summary>
        public static string Show_internalTypesMembers {
            get {
                return ResourceManager.GetString("Show_internalTypesMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show all types and members ähnelt.
        /// </summary>
        public static string ShowAllTypesAndMembers {
            get {
                return ResourceManager.GetString("ShowAllTypesAndMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show assembly load log ähnelt.
        /// </summary>
        public static string ShowAssemblyLoad {
            get {
                return ResourceManager.GetString("ShowAssemblyLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ShowChildIndexInBlock ähnelt.
        /// </summary>
        public static string ShowChildIndexInBlock {
            get {
                return ResourceManager.GetString("ShowChildIndexInBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show XML documentation in decompiled code ähnelt.
        /// </summary>
        public static string ShowDocumentationDecompiledCode {
            get {
                return ResourceManager.GetString("ShowDocumentationDecompiledCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ShowILRanges ähnelt.
        /// </summary>
        public static string ShowILRanges {
            get {
                return ResourceManager.GetString("ShowILRanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show info from debug symbols, if available ähnelt.
        /// </summary>
        public static string ShowInfoFromDebugSymbolsAvailable {
            get {
                return ResourceManager.GetString("ShowInfoFromDebugSymbolsAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show internal types and members ähnelt.
        /// </summary>
        public static string ShowInternalTypesMembers {
            get {
                return ResourceManager.GetString("ShowInternalTypesMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show line numbers ähnelt.
        /// </summary>
        public static string ShowLineNumbers {
            get {
                return ResourceManager.GetString("ShowLineNumbers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show metadata tokens ähnelt.
        /// </summary>
        public static string ShowMetadataTokens {
            get {
                return ResourceManager.GetString("ShowMetadataTokens", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show metadata tokens in base 10 ähnelt.
        /// </summary>
        public static string ShowMetadataTokensInBase10 {
            get {
                return ResourceManager.GetString("ShowMetadataTokensInBase10", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show state after this step ähnelt.
        /// </summary>
        public static string ShowStateAfterThisStep {
            get {
                return ResourceManager.GetString("ShowStateAfterThisStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show state before this step ähnelt.
        /// </summary>
        public static string ShowStateBeforeThisStep {
            get {
                return ResourceManager.GetString("ShowStateBeforeThisStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size: ähnelt.
        /// </summary>
        public static string Size {
            get {
                return ResourceManager.GetString("Size", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sort assembly _list by name ähnelt.
        /// </summary>
        public static string SortAssembly_listName {
            get {
                return ResourceManager.GetString("SortAssembly_listName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sort assembly list by name ähnelt.
        /// </summary>
        public static string SortAssemblyListName {
            get {
                return ResourceManager.GetString("SortAssemblyListName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sort results by fitness ähnelt.
        /// </summary>
        public static string SortResultsFitness {
            get {
                return ResourceManager.GetString("SortResultsFitness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stand by... ähnelt.
        /// </summary>
        public static string StandBy {
            get {
                return ResourceManager.GetString("StandBy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Status ähnelt.
        /// </summary>
        public static string Status {
            get {
                return ResourceManager.GetString("Status", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die String Table ähnelt.
        /// </summary>
        public static string StringTable {
            get {
                return ResourceManager.GetString("StringTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Tab size: ähnelt.
        /// </summary>
        public static string TabSize {
            get {
                return ResourceManager.GetString("TabSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toggle All Folding ähnelt.
        /// </summary>
        public static string ToggleFolding {
            get {
                return ResourceManager.GetString("ToggleFolding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No update for ILSpy found. ähnelt.
        /// </summary>
        public static string UpdateILSpyFound {
            get {
                return ResourceManager.GetString("UpdateILSpyFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UseFieldSugar ähnelt.
        /// </summary>
        public static string UseFieldSugar {
            get {
                return ResourceManager.GetString("UseFieldSugar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UseLogicOperationSugar ähnelt.
        /// </summary>
        public static string UseLogicOperationSugar {
            get {
                return ResourceManager.GetString("UseLogicOperationSugar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use tabs instead of spaces ähnelt.
        /// </summary>
        public static string UseTabsInsteadOfSpaces {
            get {
                return ResourceManager.GetString("UseTabsInsteadOfSpaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are using the latest release. ähnelt.
        /// </summary>
        public static string UsingLatestRelease {
            get {
                return ResourceManager.GetString("UsingLatestRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You are using a nightly build newer than the latest release. ähnelt.
        /// </summary>
        public static string UsingNightlyBuildNewerThanLatestRelease {
            get {
                return ResourceManager.GetString("UsingNightlyBuildNewerThanLatestRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value ähnelt.
        /// </summary>
        public static string Value {
            get {
                return ResourceManager.GetString("Value", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Value (as string) ähnelt.
        /// </summary>
        public static string ValueString {
            get {
                return ResourceManager.GetString("ValueString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use variable names from debug symbols, if available ähnelt.
        /// </summary>
        public static string VariableNamesFromDebugSymbolsAvailable {
            get {
                return ResourceManager.GetString("VariableNamesFromDebugSymbolsAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version ähnelt.
        /// </summary>
        public static string Version {
            get {
                return ResourceManager.GetString("Version", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version {0} is available. ähnelt.
        /// </summary>
        public static string VersionAvailable {
            get {
                return ResourceManager.GetString("VersionAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die View ähnelt.
        /// </summary>
        public static string View {
            get {
                return ResourceManager.GetString("View", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning: This assembly is marked as &apos;reference assembly&apos;, which means that it only contains metadata and no executable code. ähnelt.
        /// </summary>
        public static string WarningAsmMarkedRef {
            get {
                return ResourceManager.GetString("WarningAsmMarkedRef", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning: Some assembly references could not be resolved automatically. This might lead to incorrect decompilation of some parts, ähnelt.
        /// </summary>
        public static string WarningSomeAssemblyReference {
            get {
                return ResourceManager.GetString("WarningSomeAssemblyReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search for t:TypeName, m:Member or c:Constant; use exact match (=term), &apos;should not contain&apos; (-term) or &apos;must contain&apos; (+term); use /reg(ular)?Ex(pressions)?/ or both - t:/Type(Name)?/... ähnelt.
        /// </summary>
        public static string WatermarkText {
            get {
                return ResourceManager.GetString("WatermarkText", resourceCulture);
            }
        }
    }
}
